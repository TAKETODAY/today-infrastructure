pluginManagement {
  repositories {
    mavenLocal()
    mavenCentral()
    gradlePluginPortal()
  }
}

plugins {
  id("com.gradle.enterprise") version("3.14.1")
}

gradleEnterprise {
  if (System.getenv("CI") != null || Boolean.getBoolean("CI")) {
    buildScan {
      publishAlways()
      termsOfServiceUrl = "https://gradle.com/terms-of-service"
      termsOfServiceAgree = "yes"
    }
  }
}

rootProject.name = 'today-infrastructure'

include 'infra-bom'
include 'infra-docs'
include 'infra-dependencies'

include 'today-retry'
include 'today-tx'
include 'today-web'
include 'today-aspects'
include 'today-websocket'
include 'today-jcache'
include 'today-redisson'
include 'today-jdbc'
include 'today-orm'
include 'today-core'
include 'today-core-test'
include 'today-framework'
include 'today-oxm'
include 'today-aop'
include 'today-test'
include 'today-beans'
include 'today-mybatis'
include 'today-context'
include 'today-starter'
include 'today-instrument'
include 'integration-tests'
include 'today-test-support'
include 'today-context-indexer'

// Starters
file("${rootDir}/today-starter").eachDirMatch(~/today-starter.*/) {
  include "today-starter:${it.name}"
}

// Build helper
file("${rootDir}/infra-build").eachDirMatch(~/infra-.*/) {
  include "infra-build:${it.name}"
}

rootProject.children.findAll {
  it.name.startsWith("today-") && !it.name.startsWith("today-starter")
}.each {
  it.buildFileName = "${it.name}.gradle"
}

