plugins {
  id "cn.taketoday.integration-test"
  id "cn.taketoday.maven-plugin"
}

description = "Maven plugin for Today Infrastructure Applications"

configurations {
  effectiveBom.extendsFrom(dependencyManagement)
}

dependencies {
  optional 'org.apache.maven.plugin-tools:maven-plugin-annotations:3.4'
  optional 'org.apache.maven.shared:file-management:1.2.1'
  optional 'org.apache.maven.shared:maven-common-artifact-filters:3.2.0'
  optional "org.apache.maven:maven-plugin-api:3.0"
  optional 'org.sonatype.plexus:plexus-build-api:0.0.7'
  optional("org.apache.maven.plugins:maven-shade-plugin:3.5.0") {
    exclude(group: "javax.enterprise", module: "cdi-api")
    exclude(group: "javax.inject", module: "javax.inject")
  }

  implementation(project(":today-core"))
  implementation(project(":today-context"))
  implementation(project(":infra-build:infra-app-loader"))
  implementation(project(":infra-build:infra-app-loader-tools"))

  implementation project(":infra-build:infra-buildpack-platform")
  implementation 'io.spring.gradle:dependency-management-plugin:1.1.0'
  implementation 'org.apache.commons:commons-compress:1.21'

  testImplementation(project(":today-test-support"))
  testImplementation("org.testcontainers:testcontainers")
  testImplementation("org.testcontainers:junit-jupiter")
  testImplementation("org.apache.maven.shared:maven-invoker:3.1.0") {
    exclude(group: "javax.inject", module: "javax.inject")
  }

  intTestImplementation(project(":today-test-support"))
  intTestImplementation(project(":infra-build:infra-app-loader"))
  intTestImplementation(project(":infra-build:infra-app-loader-tools"))

//  mavenRepository(project(path: ":today-core", configuration: "mavenRepository"))
//  mavenRepository(project(path: ":today-context", configuration: "mavenRepository"))
//  mavenRepository(project(path: ":today-test-support", configuration: "mavenRepository"))
//  mavenRepository(project(path: ":infra-build:infra-app-loader", configuration: "mavenRepository"))
//  mavenRepository(project(path: ":infra-build:infra-app-loader-tools", configuration: "mavenRepository"))

  intTestImplementation("org.assertj:assertj-core")
  intTestImplementation("org.junit.jupiter:junit-jupiter")
  intTestImplementation("org.testcontainers:testcontainers")
  intTestImplementation("org.testcontainers:junit-jupiter")
  intTestImplementation("org.apache.maven.shared:maven-invoker:3.1.0") {
    exclude(group: "javax.inject", module: "javax.inject")
  }
  intTestImplementation 'org.apache.maven.plugin-tools:maven-plugin-annotations:3.4'
  intTestImplementation 'org.sonatype.plexus:plexus-build-api:0.0.7'
  intTestImplementation 'org.apache.maven.shared:file-management:1.2.1'
  intTestImplementation 'org.apache.maven.shared:maven-common-artifact-filters:3.2.0'
  intTestImplementation "org.apache.maven:maven-plugin-api:3.0"
  intTestImplementation("org.apache.maven.plugins:maven-shade-plugin:3.5.0") {
    exclude(group: "javax.enterprise", module: "cdi-api")
    exclude(group: "javax.inject", module: "javax.inject")
  }

  intTestImplementation project(":infra-build:infra-buildpack-platform")

  versionProperties(dependencies.project(path: ":infra-platform", configuration: "effectiveBom"))

//  afterEvaluate {
//    configurations.forEach {
//      println it.name
//      it.getDependencies().configureEach {
//        println it
//      }
//      println()
//    }
//  }
}

sourceSets {
  intTest {
//    output.dir("${buildDir}/generated-resources", builtBy: "extractVersionProperties")
  }
}

javadoc {
  options {
    author = true
    docTitle = "Infra Maven Plugin ${project.version} API"
    encoding = "UTF-8"
    memberLevel = JavadocMemberLevel.PROTECTED
    outputLevel = JavadocOutputLevel.QUIET
    splitIndex = true
    use = true
    windowTitle = "Infra Maven Plugin ${project.version} API"
  }
}

prepareMavenBinaries {
  versions "3.9.0", "3.8.5", "3.6.3"
}
