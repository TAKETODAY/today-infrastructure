<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Original Author -> Harry Yang (taketoday@foxmail.com) https://taketoday.cn
  ~ Copyright Â© Harry Yang & 2017 - 2023 All Rights Reserved.
  ~
  ~ DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER
  ~
  ~ This program is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU General Public License as published by
  ~ the Free Software Foundation, either version 3 of the License, or
  ~ (at your option) any later version.
  ~
  ~ This program is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~ GNU General Public License for more details.
  ~
  ~ You should have received a copy of the GNU General Public License
  ~ along with this program.  If not, see [http://www.gnu.org/licenses/]
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

	<bean id="prototypeTest" class="infra.beans.testfixture.beans.SideEffectBean" scope="prototype">
		<property name="count"><value>10</value></property>
	</bean>

	<bean id="threadLocalTs" class="infra.aop.target.ThreadLocalTargetSource">
		<property name="targetBeanName"><value>prototypeTest</value></property>
	</bean>

	<bean id="debugInterceptor" class="infra.aop.testfixture.interceptor.NopInterceptor" />

	<!--
		We want to invoke the getStatsMixin method on our ThreadLocal invoker
	-->
	<bean id="statsAdvisor" class="infra.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetObject"><ref bean="threadLocalTs" /></property>
		<property name="targetMethod"><value>getStatsMixin</value></property>
	</bean>

	<!--
		This will create a bean for each thread ("apartment")
	-->
	<bean id="apartment" class="infra.aop.framework.ProxyFactoryBean">
		<property name="interceptorNames"><value>debugInterceptor,statsAdvisor</value></property>
		<property name="targetSource"><ref bean="threadLocalTs"/></property>
		<!-- Necessary as have a mixin and want to avoid losing the class,
			 because there's no target interface -->
		<property name="proxyTargetClass"><value>true</value></property>
	</bean>

	<!-- ================ Definitions for second ThreadLocalTargetSource ====== -->

	<bean id="test" class="infra.beans.testfixture.beans.TestBean" scope="prototype">
		<property name="name"><value>Rod</value></property>
		<property name="spouse"><ref bean="wife"/></property>
	</bean>

	<bean id="wife" class="infra.beans.testfixture.beans.TestBean">
		<property name="name"><value>Kerry</value></property>
	</bean>

	<bean id="threadLocalTs2" class="infra.aop.target.ThreadLocalTargetSource">
		<property name="targetBeanName"><value>test</value></property>
	</bean>

	<bean id="threadLocal2" class="infra.aop.framework.ProxyFactoryBean">
		<property name="targetSource"><ref bean="threadLocalTs2"/></property>
	</bean>

</beans>
