<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright 2017 - 2023 the original author or authors.
  ~
  ~ This program is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU General Public License as published by
  ~ the Free Software Foundation, either version 3 of the License, or
  ~ (at your option) any later version.
  ~
  ~ This program is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~ GNU General Public License for more details.
  ~
  ~ You should have received a copy of the GNU General Public License
  ~ along with this program.  If not, see [http://www.gnu.org/licenses/]
  -->
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:jdbc="http://www.springframework.org/schema/jdbc"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd"
    default-autowire="byName">

  <bean id="userTransactionService" class="com.atomikos.icatch.config.UserTransactionServiceImp"
      init-method="init" destroy-method="shutdownForce">
    <constructor-arg>
      <!-- Seems these settings make no difference -->
      <props>
        <prop key="com.atomikos.icatch.threaded_2pc">
          true
        </prop>
        <prop key="com.atomikos.icatch.serial_jta_transactions">
          false
        </prop>
      </props>
    </constructor-arg>
  </bean>

  <!-- Construct Atomikos UserTransactionManager, needed to configure Infra -->
  <bean id="transactionManager" class="com.atomikos.icatch.jta.UserTransactionManager"
      init-method="init" destroy-method="close" depends-on="userTransactionService">

    <!-- IMPORTANT: disable startup because the userTransactionService above
      does this -->
    <property name="startupTransactionService" value="false" />

    <!-- when close is called, should we force transactions to terminate or
      not? -->
    <property name="forceShutdown" value="false" />
  </bean>

  <!-- Also use Atomikos UserTransactionImp, needed to configure Infra -->
  <bean id="userTransaction" class="com.atomikos.icatch.jta.UserTransactionImp"
      depends-on="userTransactionService">
    <property name="transactionTimeout" value="300" />
  </bean>

  <!-- Configure the Infra framework to use JTA transactions from Atomikos -->
  <bean id="JtaTransactionManager"
      class="cn.taketoday.transaction.jta.JtaTransactionManager"
      depends-on="userTransactionService">
    <property name="transactionManager" ref="transactionManager" />
    <property name="userTransaction" ref="userTransaction" />
  </bean>

  <tx:annotation-driven transaction-manager="JtaTransactionManager" />

  <context:component-scan base-package="cn.taketoday.orm.mybatis.submitted.xa" />

  <bean id="master" class="com.atomikos.jdbc.AtomikosDataSourceBean"
      init-method="init" destroy-method="close">
    <property name="uniqueResourceName" value="masterDBUniqueName" />
    <property name="xaDataSourceClassName" value="org.apache.derby.jdbc.EmbeddedXADataSource" />
    <property name="localTransactionMode" value="true" />
    <property name="minPoolSize">
      <value>1</value>
    </property>
    <property name="maxPoolSize">
      <value>5</value>
    </property>
    <property name="xaProperties">
      <props>
        <prop key="databaseName">memory:masterDB</prop>
        <prop key="createDatabase">create</prop>
      </props>
    </property>
  </bean>

  <bean id="slave" class="com.atomikos.jdbc.AtomikosDataSourceBean"
      init-method="init" destroy-method="close">
    <property name="uniqueResourceName" value="slaveDBUniqueName" />
    <property name="xaDataSourceClassName" value="org.apache.derby.jdbc.EmbeddedXADataSource" />
    <property name="localTransactionMode" value="true" />
    <property name="minPoolSize">
      <value>1</value>
    </property>
    <property name="maxPoolSize">
      <value>5</value>
    </property>
    <property name="xaProperties">
      <props>
        <prop key="databaseName">memory:slaveDB</prop>
        <prop key="createDatabase">create</prop>
      </props>
    </property>
  </bean>

  <jdbc:initialize-database data-source="master">
    <jdbc:script
        location="classpath:cn/taketoday/orm/mybatis/submitted/xa/database-schema.sql" />
  </jdbc:initialize-database>

  <jdbc:initialize-database data-source="slave">
    <jdbc:script
        location="classpath:cn/taketoday/orm/mybatis/submitted/xa/database-schema.sql" />
  </jdbc:initialize-database>

  <bean id="sqlSessionFactoryMaster" class="cn.taketoday.orm.mybatis.SqlSessionFactoryBean">
    <property name="databaseIdProvider">
      <null />
    </property>
    <property name="dataSource" ref="master" />
    <property name="typeAliasesPackage" value="org.mybatis.jpetstore.domain" />
  </bean>

  <bean id="userMapperMaster" class="cn.taketoday.orm.mybatis.mapper.MapperFactoryBean">
    <property name="sqlSessionFactory" ref="sqlSessionFactoryMaster" />
    <property name="mapperInterface" value="cn.taketoday.orm.mybatis.submitted.xa.UserMapper" />
  </bean>

  <bean id="sqlSessionFactorySlave" class="cn.taketoday.orm.mybatis.SqlSessionFactoryBean">
    <property name="databaseIdProvider">
      <null />
    </property>
    <property name="dataSource" ref="slave" />
    <property name="typeAliasesPackage" value="org.mybatis.jpetstore.domain" />
  </bean>

  <bean id="userMapperSlave" class="cn.taketoday.orm.mybatis.mapper.MapperFactoryBean">
    <property name="sqlSessionFactory" ref="sqlSessionFactorySlave" />
    <property name="mapperInterface" value="cn.taketoday.orm.mybatis.submitted.xa.UserMapper" />
  </bean>

</beans>
