plugins {
  id 'me.champeau.mrjar'
}

description = "Infra Core Technologies"


multiRelease {
  targetVersions 17, 21
}

configurations {
  java21Api.extendsFrom(api)
  java21Implementation.extendsFrom(implementation)
}

dependencies {

  compileOnly("io.projectreactor.tools:blockhound")
  optional("org.yaml:snakeyaml")
  optional("net.sf.jopt-simple:jopt-simple")
  optional("org.aspectj:aspectjweaver")
  optional("io.projectreactor:reactor-core")
  optional("io.reactivex.rxjava3:rxjava")
  optional("io.smallrye.reactive:mutiny")
  optional("io.netty:netty-buffer")
  optional("io.netty:netty5-buffer")
  optional("org.slf4j:slf4j-api")
  optional 'org.apache.logging.log4j:log4j-api'
  optional("jakarta.annotation:jakarta.annotation-api")
  optional("io.micrometer:context-propagation")

  testImplementation("jakarta.xml.bind:jakarta.xml.bind-api")
  testImplementation("com.google.code.findbugs:jsr305")
  testImplementation("com.fasterxml.woodstox:woodstox-core")
  testImplementation("org.xmlunit:xmlunit-assertj")
  testImplementation("org.xmlunit:xmlunit-matchers")
  testImplementation("io.projectreactor:reactor-test")
  testImplementation("io.projectreactor.tools:blockhound")
  testImplementation("org.skyscreamer:jsonassert")
  testImplementation("com.squareup.okhttp3:mockwebserver")
  testImplementation("com.fasterxml.jackson.core:jackson-databind")
  testImplementation 'org.codehaus.janino:janino:3.1.6'
  testImplementation("ch.qos.logback:logback-classic")
  testImplementation 'org.apache.logging.log4j:log4j-core'

  testImplementation "com.google.truth:truth:1.1.5"
  testImplementation "com.google.testing.compile:compile-testing:0.21.0"
  testImplementation 'com.google.jimfs:jimfs:1.2'
  testImplementation 'org.eclipse.jdt.core.compiler:ecj:4.6.1'
  testImplementation(project(":today-test"))
  testImplementation("org.awaitility:awaitility")

  testFixturesImplementation("com.google.code.findbugs:jsr305")
  testFixturesImplementation("org.junit.platform:junit-platform-launcher")
  testFixturesImplementation("org.junit.jupiter:junit-jupiter-api")
  testFixturesImplementation("org.junit.jupiter:junit-jupiter-params")
  testFixturesImplementation("org.assertj:assertj-core")
  testFixturesImplementation("org.xmlunit:xmlunit-assertj")
  testFixturesImplementation("io.projectreactor:reactor-test")

}

jar {
  manifest.attributes["Dependencies"] = "jdk.unsupported"  // for WildFly (-> Objenesis 3.2)
}

test {
  // Make sure the classes dir is used on the test classpath (required by ResourceTests).
  // When test fixtures are involved, the JAR is used by default.
  classpath = sourceSets.main.output.classesDirs + files(sourceSets.main.output.resourcesDir) + classpath - files(jar.archiveFile)

  // Ensure that BlockHound tests run on JDK 13+. For details, see:
  // https://github.com/reactor/BlockHound/issues/33
  jvmArgs += [
      "-XX:+AllowRedefinitionToAddDeleteMethods"
  ]
}