plugins {
  id 'io.freefair.aspectj' version '8.0.1' apply false
  id 'org.unbroken-dome.xjc' version '2.0.0' apply false
  id 'com.github.ben-manes.versions' version '0.46.0'
  id 'com.github.johnrengelman.shadow' version '8.1.1' apply false
  id 'de.undercouch.download' version '5.4.0'
  id 'me.champeau.jmh' version '0.7.0' apply false
  id 'me.champeau.mrjar' version '0.1.1'
  id "com.github.kt3k.coveralls" version "2.12.2"
}

ext {
  moduleProjects = subprojects.findAll { it.name.startsWith("today-") }
  javaProjects = subprojects - project(":infra-bom") - project(":infra-platform") - project(":infra-code-coverage")
}

configure(allprojects) { project ->
  repositories {
    mavenLocal()

//    maven { url "https://maven.aliyun.com/repository/public" }
//		maven { url "https://repo.huaweicloud.com/repository/maven" }

    mavenCentral()
    maven {
      url "https://repo.spring.io/milestone"
      content {
        // Netty 5 optional support
        includeGroup 'io.projectreactor.netty'
      }
    }
    if (version.contains('-')) {
      maven { url "https://repo.spring.io/milestone" }
    }
    if (version.endsWith('-SNAPSHOT')) {
      maven { url "https://repo.spring.io/snapshot" }
    }
  }
  configurations.configureEach {
    resolutionStrategy {
      cacheChangingModulesFor 0, "seconds"
      cacheDynamicVersionsFor 0, "seconds"
    }
  }
}

configure([rootProject] + javaProjects) { project ->
  group = "cn.taketoday"

  apply plugin: "java"
  apply plugin: 'jacoco'
  apply plugin: "java-test-fixtures"
  apply plugin: 'cn.taketoday.build.conventions'
  apply from: "${rootDir}/gradle/toolchains.gradle"

  configurations {
    dependencyManagement {
      canBeConsumed = false
      canBeResolved = false
      visible = false
    }
    matching { it.name.endsWith("Classpath") }.configureEach {
      it.extendsFrom(dependencyManagement)
    }
  }

  jacocoTestReport {
    enabled = false
  }

  dependencies {
    dependencyManagement(enforcedPlatform(dependencies.project(path: ":infra-platform")))
    testImplementation("org.junit.jupiter:junit-jupiter-api")
    testImplementation("org.junit.jupiter:junit-jupiter-params")
    testImplementation("org.junit.platform:junit-platform-suite-api")
    testImplementation("org.mockito:mockito-core")
    testImplementation("org.mockito:mockito-junit-jupiter")
    testImplementation("io.mockk:mockk")
    testImplementation("junit:junit")
    testImplementation("org.assertj:assertj-core")
    testImplementation 'org.projectlombok:lombok'
    testAnnotationProcessor("org.projectlombok:lombok:1.18.22")

    // Pull in the latest JUnit 5 Launcher API to ensure proper support in IDEs.
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine")
    testRuntimeOnly("org.junit.platform:junit-platform-launcher")
    testRuntimeOnly("org.junit.platform:junit-platform-suite-engine")
    // JSR-305 only used for non-required meta-annotations
    compileOnly("com.google.code.findbugs:jsr305")
    testCompileOnly("com.google.code.findbugs:jsr305")
  }

  ext.javadocLinks = [
          "https://docs.oracle.com/en/java/javase/17/docs/api/",
          "https://jakarta.ee/specifications/platform/9/apidocs/",
          "https://docs.oracle.com/cd/E13222_01/wls/docs90/javadocs/",  // CommonJ and weblogic.* packages
          "https://www.ibm.com/docs/api/v1/content/SSEQTP_8.5.5/com.ibm.websphere.javadoc.doc/web/apidocs/", // com.ibm.*
          "https://docs.jboss.org/jbossas/javadoc/4.0.5/connector/", // org.jboss.resource.*
          "https://docs.jboss.org/hibernate/orm/5.6/javadocs/",
          "https://www.eclipse.org/aspectj/doc/released/aspectj5rt-api/",
          "https://www.quartz-scheduler.org/api/2.3.0/",
          "https://www.javadoc.io/doc/com.fasterxml.jackson.core/jackson-core/2.14.1/",
          "https://www.javadoc.io/doc/com.fasterxml.jackson.core/jackson-databind/2.14.1/",
          "https://www.javadoc.io/doc/com.fasterxml.jackson.dataformat/jackson-dataformat-xml/2.14.1/",
          "https://hc.apache.org/httpcomponents-client-5.2.x/current/httpclient5/apidocs/",
          "https://projectreactor.io/docs/test/release/api/",
          "https://junit.org/junit4/javadoc/4.13.2/",
          // "https://junit.org/junit5/docs/5.9.3/api/",
          "https://www.reactive-streams.org/reactive-streams-1.0.3-javadoc/",
          "https://javadoc.io/static/io.rsocket/rsocket-core/1.1.1/",
          "https://r2dbc.io/spec/1.0.0.RELEASE/api/",
          // Previously there could be a split-package issue between JSR250 and JSR305 javax.annotation packages,
          // JSR 250 annotations such as @Resource and @PostConstruct have been replaced by their
          // JakartaEE equivalents in the jakarta.annotation package.
          "https://www.javadoc.io/doc/com.google.code.findbugs/jsr305/3.0.2/"
  ] as String[]
}

configure(moduleProjects) { project ->
  apply from: "${rootDir}/gradle/infra-module.gradle"
}

configure(rootProject) {
  description = "TODAY Infrastructure"
  apply plugin: 'cn.taketoday.build.api-diff'
}

// A Java library for dependency injection and aspect oriented programing and building high-performance web applications like Spring Boot.
