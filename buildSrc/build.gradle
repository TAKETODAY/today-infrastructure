plugins {
  id 'java-gradle-plugin'
}

repositories {
  mavenLocal()
  mavenCentral()
  gradlePluginPortal()
}


dependencies {
  implementation 'org.yaml:snakeyaml:2.0'
  implementation "me.champeau.gradle:japicmp-gradle-plugin:0.4.1"
  implementation "org.gradle:test-retry-gradle-plugin:1.4.1"
  // implementation("org.asciidoctor:asciidoctor-gradle-jvm:3.3.2")
  implementation "io.spring.javaformat:spring-javaformat-gradle-plugin:${javaFormatVersion}"
  implementation "org.apache.maven:maven-artifact:3.6.3"
  implementation 'cn.taketoday:today-core:4.0.0-Draft.6'
}

gradlePlugin {
  plugins {
    apiDiffPlugin {
      id = "infra.building.api-diff"
      implementationClass = "infra.building.api.ApiDiffPlugin"
    }
    bomPlugin {
      id = "infra.bom"
      implementationClass = "infra.building.bom.BomPlugin"
    }
    conventionsPlugin {
      id = "infra.building.conventions"
      implementationClass = "infra.building.ConventionsPlugin"
    }
    optionalDependenciesPlugin {
      id = "infra.building.optional-dependencies"
      implementationClass = "infra.building.optional.OptionalDependenciesPlugin"
    }
    runtimeHintsAgentPlugin {
      id = "infra.building.runtimehints-agent"
      implementationClass = "infra.building.hint.RuntimeHintsAgentPlugin"
    }
    integrationTestPlugin {
      id = "infra.integration-test"
      implementationClass = "infra.building.IntegrationTestPlugin"
    }
    mavenPluginPlugin {
      id = "infra.maven-plugin"
      implementationClass = "infra.building.maven.MavenPluginPlugin"
    }
    generateAntoraYml {
      id = 'infra.generate-antora-yml'
      implementationClass = 'infra.building.antora.GenerateAntoraYmlPlugin'
    }
  }
}
